#! /bin/bash
#-----------------------------------------------------------------------------
#--  Working directory:

if cd "$(dirname "$0")" ; then
   true
else
   echo "Can not work from the proper directory." 1>&2
   exit 100
fi

#-----------------------------------------------------------------------------
#--  Clean up:

rm -f ../../*.adt
rm -f ../../*.ali
rm -f ../../examples/*.adt
rm -f ../../examples/*.ali

#-----------------------------------------------------------------------------

error_counter="$(mktemp)"

for file in ../../examples/*.ads ; do
   name=$(basename ${file} .ads)

   if [ "${name##bad_}" = "${name}" ]; then
      expected_result=good
   else
      expected_result=bad
   fi

   ( cd ../.. && ADA_INCLUDE_PATH=src:examples ./bin/command_line_parser_generator-run ${name} ) \
     1>${name}.log \
     2>${name}.errors
   result=$?

   (
      buffer="$(mktemp)"
      egrep -v '^ASIS warning:|^Asis[.]Ada_Environments[.]Open: body is not compiled for ' ${name}.errors > "${buffer}"
      mv "${buffer}" ${name}.errors
   )

   if   [ ${result} -eq 0 -a ${expected_result} = bad  ]; then
      echo . >> "${error_counter}"

      echo "'${name}' passed while expected to fail."
   elif [ ${result} -ne 0 -a ${expected_result} = good ]; then
      echo . >> "${error_counter}"

      echo "'${name}' failed while expected to pass."
   elif [ "${VERBOSE}" = "true" ]; then
      echo "Got the expected result for '${name}'."
   fi

   if [ -f ${name}.log.expected ]; then
      if diff --brief ${name}.log.expected ${name}.log 1>/dev/null ; then
         if [ "${VERBOSE}" = "true" ]; then
            echo "Output for '${name}' matched expectations."
         fi
      else
         echo . >> "${error_counter}"

         echo "Mismatch in expected output from analysing '${name}':"
         diff -u ${name}.log.expected ${name}.log
         echo
      fi
   elif [ "${VERBOSE}" = "true" ]; then
      echo "No expected output for '${name}'."
   fi

   if [ -f ${name}.errors.expected ]; then
      if diff --brief ${name}.errors.expected ${name}.errors 1>/dev/null ; then
         if [ "${VERBOSE}" = "true" ]; then
            echo "Error messages for '${name}' matched expectations."
         fi
      else
         echo . >> "${error_counter}"

         echo "Mismatch in expected error messages from analysing '${name}':"
         diff -u ${name}.errors.expected ${name}.errors
         echo
      fi
   elif [ "${VERBOSE}" = "true" ]; then
      echo "No expected error messages for '${name}'."
   fi
done

#-----------------------------------------------------------------------------

exit $(cat "${error_counter}" | wc -l ; rm -f "${error_counter}")

#-----------------------------------------------------------------------------
